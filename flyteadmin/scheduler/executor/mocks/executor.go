// Code generated by mockery v2.40.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/flyteorg/flyte/flyteadmin/scheduler/repositories/models"

	time "time"
)

// Executor is an autogenerated mock type for the Executor type
type Executor struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, scheduledTime, s
func (_m *Executor) Execute(ctx context.Context, scheduledTime time.Time, s models.SchedulableEntity) error {
	ret := _m.Called(ctx, scheduledTime, s)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, time.Time, models.SchedulableEntity) error); ok {
		r0 = rf(ctx, scheduledTime, s)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewExecutor creates a new instance of Executor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExecutor(t interface {
	mock.TestingT
	Cleanup(func())
}) *Executor {
	mock := &Executor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
