// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/admin/workflow.proto

package admin

import (
	fmt "fmt"
	core "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/core"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represents a request structure to create a revision of a workflow.
// See :ref:`ref_flyteidl.admin.Workflow` for more details
type WorkflowCreateRequest struct {
	// id represents the unique identifier of the workflow.
	// +required
	Id *core.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Represents the specification for workflow.
	// +required
	Spec                 *WorkflowSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WorkflowCreateRequest) Reset()         { *m = WorkflowCreateRequest{} }
func (m *WorkflowCreateRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowCreateRequest) ProtoMessage()    {}
func (*WorkflowCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{0}
}

func (m *WorkflowCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowCreateRequest.Unmarshal(m, b)
}
func (m *WorkflowCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowCreateRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowCreateRequest.Merge(m, src)
}
func (m *WorkflowCreateRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowCreateRequest.Size(m)
}
func (m *WorkflowCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowCreateRequest proto.InternalMessageInfo

func (m *WorkflowCreateRequest) GetId() *core.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *WorkflowCreateRequest) GetSpec() *WorkflowSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type WorkflowCreateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowCreateResponse) Reset()         { *m = WorkflowCreateResponse{} }
func (m *WorkflowCreateResponse) String() string { return proto.CompactTextString(m) }
func (*WorkflowCreateResponse) ProtoMessage()    {}
func (*WorkflowCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{1}
}

func (m *WorkflowCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowCreateResponse.Unmarshal(m, b)
}
func (m *WorkflowCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowCreateResponse.Marshal(b, m, deterministic)
}
func (m *WorkflowCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowCreateResponse.Merge(m, src)
}
func (m *WorkflowCreateResponse) XXX_Size() int {
	return xxx_messageInfo_WorkflowCreateResponse.Size(m)
}
func (m *WorkflowCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowCreateResponse proto.InternalMessageInfo

// Represents the workflow structure stored in the Admin
// A workflow is created by ordering tasks and associating outputs to inputs
// in order to produce a directed-acyclic execution graph.
type Workflow struct {
	// id represents the unique identifier of the workflow.
	Id *core.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// closure encapsulates all the fields that maps to a compiled version of the workflow.
	Closure *WorkflowClosure `protobuf:"bytes,2,opt,name=closure,proto3" json:"closure,omitempty"`
	// One-liner overview of the entity.
	ShortDescription     string   `protobuf:"bytes,3,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{2}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetId() *core.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Workflow) GetClosure() *WorkflowClosure {
	if m != nil {
		return m.Closure
	}
	return nil
}

func (m *Workflow) GetShortDescription() string {
	if m != nil {
		return m.ShortDescription
	}
	return ""
}

// Represents a list of workflows returned from the admin.
// See :ref:`ref_flyteidl.admin.Workflow` for more details
type WorkflowList struct {
	// A list of workflows returned based on the request.
	Workflows []*Workflow `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query. If there are no more results, this value will be empty.
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowList) Reset()         { *m = WorkflowList{} }
func (m *WorkflowList) String() string { return proto.CompactTextString(m) }
func (*WorkflowList) ProtoMessage()    {}
func (*WorkflowList) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{3}
}

func (m *WorkflowList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowList.Unmarshal(m, b)
}
func (m *WorkflowList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowList.Marshal(b, m, deterministic)
}
func (m *WorkflowList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowList.Merge(m, src)
}
func (m *WorkflowList) XXX_Size() int {
	return xxx_messageInfo_WorkflowList.Size(m)
}
func (m *WorkflowList) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowList.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowList proto.InternalMessageInfo

func (m *WorkflowList) GetWorkflows() []*Workflow {
	if m != nil {
		return m.Workflows
	}
	return nil
}

func (m *WorkflowList) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// Represents a structure that encapsulates the specification of the workflow.
type WorkflowSpec struct {
	// Template of the task that encapsulates all the metadata of the workflow.
	Template *core.WorkflowTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	// Workflows that are embedded into other workflows need to be passed alongside the parent workflow to the
	// propeller compiler (since the compiler doesn't have any knowledge of other workflows - ie, it doesn't reach out
	// to Admin to see other registered workflows).  In fact, subworkflows do not even need to be registered.
	SubWorkflows []*core.WorkflowTemplate `protobuf:"bytes,2,rep,name=sub_workflows,json=subWorkflows,proto3" json:"sub_workflows,omitempty"`
	// Represents the specification for description entity.
	Description          *DescriptionEntity `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowSpec) Reset()         { *m = WorkflowSpec{} }
func (m *WorkflowSpec) String() string { return proto.CompactTextString(m) }
func (*WorkflowSpec) ProtoMessage()    {}
func (*WorkflowSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{4}
}

func (m *WorkflowSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowSpec.Unmarshal(m, b)
}
func (m *WorkflowSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowSpec.Marshal(b, m, deterministic)
}
func (m *WorkflowSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowSpec.Merge(m, src)
}
func (m *WorkflowSpec) XXX_Size() int {
	return xxx_messageInfo_WorkflowSpec.Size(m)
}
func (m *WorkflowSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowSpec.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowSpec proto.InternalMessageInfo

func (m *WorkflowSpec) GetTemplate() *core.WorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *WorkflowSpec) GetSubWorkflows() []*core.WorkflowTemplate {
	if m != nil {
		return m.SubWorkflows
	}
	return nil
}

func (m *WorkflowSpec) GetDescription() *DescriptionEntity {
	if m != nil {
		return m.Description
	}
	return nil
}

// A container holding the compiled workflow produced from the WorkflowSpec and additional metadata.
type WorkflowClosure struct {
	// Represents the compiled representation of the workflow from the specification provided.
	CompiledWorkflow *core.CompiledWorkflowClosure `protobuf:"bytes,1,opt,name=compiled_workflow,json=compiledWorkflow,proto3" json:"compiled_workflow,omitempty"`
	// Time at which the workflow was created.
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WorkflowClosure) Reset()         { *m = WorkflowClosure{} }
func (m *WorkflowClosure) String() string { return proto.CompactTextString(m) }
func (*WorkflowClosure) ProtoMessage()    {}
func (*WorkflowClosure) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{5}
}

func (m *WorkflowClosure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowClosure.Unmarshal(m, b)
}
func (m *WorkflowClosure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowClosure.Marshal(b, m, deterministic)
}
func (m *WorkflowClosure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowClosure.Merge(m, src)
}
func (m *WorkflowClosure) XXX_Size() int {
	return xxx_messageInfo_WorkflowClosure.Size(m)
}
func (m *WorkflowClosure) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowClosure.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowClosure proto.InternalMessageInfo

func (m *WorkflowClosure) GetCompiledWorkflow() *core.CompiledWorkflowClosure {
	if m != nil {
		return m.CompiledWorkflow
	}
	return nil
}

func (m *WorkflowClosure) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

// The workflow id is already used and the structure is different
type WorkflowErrorExistsDifferentStructure struct {
	Id                   *core.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WorkflowErrorExistsDifferentStructure) Reset()         { *m = WorkflowErrorExistsDifferentStructure{} }
func (m *WorkflowErrorExistsDifferentStructure) String() string { return proto.CompactTextString(m) }
func (*WorkflowErrorExistsDifferentStructure) ProtoMessage()    {}
func (*WorkflowErrorExistsDifferentStructure) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{6}
}

func (m *WorkflowErrorExistsDifferentStructure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowErrorExistsDifferentStructure.Unmarshal(m, b)
}
func (m *WorkflowErrorExistsDifferentStructure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowErrorExistsDifferentStructure.Marshal(b, m, deterministic)
}
func (m *WorkflowErrorExistsDifferentStructure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowErrorExistsDifferentStructure.Merge(m, src)
}
func (m *WorkflowErrorExistsDifferentStructure) XXX_Size() int {
	return xxx_messageInfo_WorkflowErrorExistsDifferentStructure.Size(m)
}
func (m *WorkflowErrorExistsDifferentStructure) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowErrorExistsDifferentStructure.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowErrorExistsDifferentStructure proto.InternalMessageInfo

func (m *WorkflowErrorExistsDifferentStructure) GetId() *core.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

// The workflow id is already used with an identical sctructure
type WorkflowErrorExistsIdenticalStructure struct {
	Id                   *core.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *WorkflowErrorExistsIdenticalStructure) Reset()         { *m = WorkflowErrorExistsIdenticalStructure{} }
func (m *WorkflowErrorExistsIdenticalStructure) String() string { return proto.CompactTextString(m) }
func (*WorkflowErrorExistsIdenticalStructure) ProtoMessage()    {}
func (*WorkflowErrorExistsIdenticalStructure) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{7}
}

func (m *WorkflowErrorExistsIdenticalStructure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowErrorExistsIdenticalStructure.Unmarshal(m, b)
}
func (m *WorkflowErrorExistsIdenticalStructure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowErrorExistsIdenticalStructure.Marshal(b, m, deterministic)
}
func (m *WorkflowErrorExistsIdenticalStructure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowErrorExistsIdenticalStructure.Merge(m, src)
}
func (m *WorkflowErrorExistsIdenticalStructure) XXX_Size() int {
	return xxx_messageInfo_WorkflowErrorExistsIdenticalStructure.Size(m)
}
func (m *WorkflowErrorExistsIdenticalStructure) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowErrorExistsIdenticalStructure.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowErrorExistsIdenticalStructure proto.InternalMessageInfo

func (m *WorkflowErrorExistsIdenticalStructure) GetId() *core.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

// When a CreateWorkflowRequest fails due to matching id
type CreateWorkflowFailureReason struct {
	// Types that are valid to be assigned to Reason:
	//	*CreateWorkflowFailureReason_ExistsDifferentStructure
	//	*CreateWorkflowFailureReason_ExistsIdenticalStructure
	Reason               isCreateWorkflowFailureReason_Reason `protobuf_oneof:"reason"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CreateWorkflowFailureReason) Reset()         { *m = CreateWorkflowFailureReason{} }
func (m *CreateWorkflowFailureReason) String() string { return proto.CompactTextString(m) }
func (*CreateWorkflowFailureReason) ProtoMessage()    {}
func (*CreateWorkflowFailureReason) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{8}
}

func (m *CreateWorkflowFailureReason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkflowFailureReason.Unmarshal(m, b)
}
func (m *CreateWorkflowFailureReason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkflowFailureReason.Marshal(b, m, deterministic)
}
func (m *CreateWorkflowFailureReason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkflowFailureReason.Merge(m, src)
}
func (m *CreateWorkflowFailureReason) XXX_Size() int {
	return xxx_messageInfo_CreateWorkflowFailureReason.Size(m)
}
func (m *CreateWorkflowFailureReason) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkflowFailureReason.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkflowFailureReason proto.InternalMessageInfo

type isCreateWorkflowFailureReason_Reason interface {
	isCreateWorkflowFailureReason_Reason()
}

type CreateWorkflowFailureReason_ExistsDifferentStructure struct {
	ExistsDifferentStructure *WorkflowErrorExistsDifferentStructure `protobuf:"bytes,1,opt,name=exists_different_structure,json=existsDifferentStructure,proto3,oneof"`
}

type CreateWorkflowFailureReason_ExistsIdenticalStructure struct {
	ExistsIdenticalStructure *WorkflowErrorExistsIdenticalStructure `protobuf:"bytes,2,opt,name=exists_identical_structure,json=existsIdenticalStructure,proto3,oneof"`
}

func (*CreateWorkflowFailureReason_ExistsDifferentStructure) isCreateWorkflowFailureReason_Reason() {}

func (*CreateWorkflowFailureReason_ExistsIdenticalStructure) isCreateWorkflowFailureReason_Reason() {}

func (m *CreateWorkflowFailureReason) GetReason() isCreateWorkflowFailureReason_Reason {
	if m != nil {
		return m.Reason
	}
	return nil
}

func (m *CreateWorkflowFailureReason) GetExistsDifferentStructure() *WorkflowErrorExistsDifferentStructure {
	if x, ok := m.GetReason().(*CreateWorkflowFailureReason_ExistsDifferentStructure); ok {
		return x.ExistsDifferentStructure
	}
	return nil
}

func (m *CreateWorkflowFailureReason) GetExistsIdenticalStructure() *WorkflowErrorExistsIdenticalStructure {
	if x, ok := m.GetReason().(*CreateWorkflowFailureReason_ExistsIdenticalStructure); ok {
		return x.ExistsIdenticalStructure
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateWorkflowFailureReason) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateWorkflowFailureReason_ExistsDifferentStructure)(nil),
		(*CreateWorkflowFailureReason_ExistsIdenticalStructure)(nil),
	}
}

type GetDynamicNodeWorkflowRequest struct {
	Id                   *core.NodeExecutionIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GetDynamicNodeWorkflowRequest) Reset()         { *m = GetDynamicNodeWorkflowRequest{} }
func (m *GetDynamicNodeWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*GetDynamicNodeWorkflowRequest) ProtoMessage()    {}
func (*GetDynamicNodeWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{9}
}

func (m *GetDynamicNodeWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDynamicNodeWorkflowRequest.Unmarshal(m, b)
}
func (m *GetDynamicNodeWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDynamicNodeWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *GetDynamicNodeWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDynamicNodeWorkflowRequest.Merge(m, src)
}
func (m *GetDynamicNodeWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_GetDynamicNodeWorkflowRequest.Size(m)
}
func (m *GetDynamicNodeWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDynamicNodeWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDynamicNodeWorkflowRequest proto.InternalMessageInfo

func (m *GetDynamicNodeWorkflowRequest) GetId() *core.NodeExecutionIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

type DynamicNodeWorkflowResponse struct {
	CompiledWorkflow     *core.CompiledWorkflowClosure `protobuf:"bytes,1,opt,name=compiled_workflow,json=compiledWorkflow,proto3" json:"compiled_workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *DynamicNodeWorkflowResponse) Reset()         { *m = DynamicNodeWorkflowResponse{} }
func (m *DynamicNodeWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*DynamicNodeWorkflowResponse) ProtoMessage()    {}
func (*DynamicNodeWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_827ade3f2372dc85, []int{10}
}

func (m *DynamicNodeWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DynamicNodeWorkflowResponse.Unmarshal(m, b)
}
func (m *DynamicNodeWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DynamicNodeWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *DynamicNodeWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DynamicNodeWorkflowResponse.Merge(m, src)
}
func (m *DynamicNodeWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_DynamicNodeWorkflowResponse.Size(m)
}
func (m *DynamicNodeWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DynamicNodeWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DynamicNodeWorkflowResponse proto.InternalMessageInfo

func (m *DynamicNodeWorkflowResponse) GetCompiledWorkflow() *core.CompiledWorkflowClosure {
	if m != nil {
		return m.CompiledWorkflow
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkflowCreateRequest)(nil), "flyteidl.admin.WorkflowCreateRequest")
	proto.RegisterType((*WorkflowCreateResponse)(nil), "flyteidl.admin.WorkflowCreateResponse")
	proto.RegisterType((*Workflow)(nil), "flyteidl.admin.Workflow")
	proto.RegisterType((*WorkflowList)(nil), "flyteidl.admin.WorkflowList")
	proto.RegisterType((*WorkflowSpec)(nil), "flyteidl.admin.WorkflowSpec")
	proto.RegisterType((*WorkflowClosure)(nil), "flyteidl.admin.WorkflowClosure")
	proto.RegisterType((*WorkflowErrorExistsDifferentStructure)(nil), "flyteidl.admin.WorkflowErrorExistsDifferentStructure")
	proto.RegisterType((*WorkflowErrorExistsIdenticalStructure)(nil), "flyteidl.admin.WorkflowErrorExistsIdenticalStructure")
	proto.RegisterType((*CreateWorkflowFailureReason)(nil), "flyteidl.admin.CreateWorkflowFailureReason")
	proto.RegisterType((*GetDynamicNodeWorkflowRequest)(nil), "flyteidl.admin.GetDynamicNodeWorkflowRequest")
	proto.RegisterType((*DynamicNodeWorkflowResponse)(nil), "flyteidl.admin.DynamicNodeWorkflowResponse")
}

func init() { proto.RegisterFile("flyteidl/admin/workflow.proto", fileDescriptor_827ade3f2372dc85) }

var fileDescriptor_827ade3f2372dc85 = []byte{
	// 640 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x25, 0x1d, 0x8c, 0xf5, 0x76, 0xc0, 0x16, 0x01, 0x0a, 0xdd, 0xc6, 0x46, 0x24, 0x60, 0x08,
	0x91, 0xa0, 0x21, 0x26, 0x4d, 0x13, 0x0f, 0xac, 0x2d, 0x1f, 0x12, 0xe2, 0x21, 0x9b, 0x34, 0x09,
	0x21, 0x55, 0xa9, 0x73, 0xdb, 0x59, 0x4b, 0xe2, 0x60, 0x3b, 0xda, 0xfa, 0x43, 0x78, 0xe4, 0x81,
	0x3f, 0xc5, 0xef, 0x41, 0x71, 0xe2, 0xb4, 0xf5, 0x28, 0x0c, 0x24, 0xde, 0x96, 0xdd, 0xe3, 0x73,
	0xce, 0x3d, 0xbe, 0xd7, 0x85, 0x8d, 0x61, 0x3c, 0x96, 0x48, 0xa3, 0xd8, 0x0f, 0xa3, 0x84, 0xa6,
	0xfe, 0x19, 0xe3, 0xa7, 0xc3, 0x98, 0x9d, 0x79, 0x19, 0x67, 0x92, 0xd9, 0x37, 0x75, 0xd9, 0x53,
	0xe5, 0xf6, 0x7a, 0x0d, 0x27, 0x8c, 0xa3, 0x4f, 0x58, 0x92, 0xd1, 0x18, 0x79, 0x89, 0x6e, 0xdf,
	0x9f, 0xad, 0xd2, 0x08, 0x53, 0x49, 0x87, 0xb4, 0xae, 0x1b, 0xa7, 0x67, 0xb5, 0xda, 0x8f, 0x0d,
	0x2b, 0x11, 0x0a, 0xc2, 0x69, 0x26, 0x29, 0x4b, 0xfb, 0x05, 0x91, 0x1c, 0x57, 0xc0, 0xcd, 0x11,
	0x63, 0xa3, 0x18, 0x7d, 0xf5, 0x35, 0xc8, 0x87, 0xbe, 0xa4, 0x09, 0x0a, 0x19, 0x26, 0x59, 0x09,
	0x70, 0x25, 0xdc, 0x39, 0xae, 0xb8, 0x3b, 0x1c, 0x43, 0x89, 0x01, 0x7e, 0xc9, 0x51, 0x48, 0xfb,
	0x09, 0x34, 0x68, 0xe4, 0x58, 0x5b, 0xd6, 0x76, 0x6b, 0xe7, 0x9e, 0x57, 0xf7, 0x56, 0xb8, 0xf1,
	0xde, 0xd7, 0x6e, 0x83, 0x06, 0x8d, 0xec, 0xe7, 0x70, 0x55, 0x64, 0x48, 0x9c, 0x86, 0x02, 0xaf,
	0x7b, 0xb3, 0x41, 0x78, 0x9a, 0xff, 0x30, 0x43, 0x12, 0x28, 0xa4, 0xeb, 0xc0, 0x5d, 0x53, 0x55,
	0x64, 0x2c, 0x15, 0xe8, 0x7e, 0xb3, 0x60, 0x49, 0x97, 0xfe, 0xc6, 0xc3, 0x1e, 0x5c, 0x27, 0x31,
	0x13, 0x39, 0xc7, 0xca, 0xc6, 0xe6, 0x3c, 0x1b, 0x9d, 0x12, 0x16, 0x68, 0xbc, 0xfd, 0x14, 0x56,
	0xc5, 0x09, 0xe3, 0xb2, 0x3f, 0x95, 0xa2, 0xb3, 0xb0, 0x65, 0x6d, 0x37, 0x83, 0x15, 0x55, 0xe8,
	0x4e, 0xfe, 0xef, 0x7e, 0x86, 0x65, 0x4d, 0xf4, 0x81, 0x0a, 0x69, 0xef, 0x42, 0x53, 0xdf, 0x8d,
	0x70, 0xac, 0xad, 0x85, 0xed, 0xd6, 0x8e, 0x33, 0x4f, 0x39, 0x98, 0x40, 0xed, 0xdb, 0x70, 0x4d,
	0xb2, 0x53, 0x4c, 0x95, 0xdb, 0x66, 0x50, 0x7e, 0xb8, 0x3f, 0xac, 0x09, 0x7d, 0x11, 0x97, 0xbd,
	0x0f, 0x4b, 0x12, 0x93, 0x2c, 0x0e, 0x25, 0x56, 0x39, 0x6c, 0x1a, 0x39, 0x68, 0xf8, 0x51, 0x05,
	0x0b, 0xea, 0x03, 0x76, 0x17, 0x6e, 0x88, 0x7c, 0xd0, 0x9f, 0xf8, 0x6b, 0x28, 0x7f, 0x7f, 0x64,
	0x58, 0x16, 0xf9, 0xe0, 0xb8, 0x76, 0xda, 0x81, 0x96, 0x19, 0x4c, 0x6b, 0xe7, 0x81, 0xd9, 0xe3,
	0x54, 0x46, 0x3d, 0x35, 0x80, 0xc1, 0xf4, 0x29, 0xf7, 0xbb, 0x05, 0xb7, 0x8c, 0x0b, 0xb0, 0x0f,
	0x61, 0xb5, 0x5a, 0x8a, 0xa8, 0xf6, 0x58, 0x35, 0xf9, 0xc8, 0xb0, 0xd8, 0xa9, 0x70, 0xe6, 0x1d,
	0xae, 0x10, 0xa3, 0x60, 0xef, 0x01, 0x10, 0x35, 0x51, 0x51, 0x3f, 0x94, 0xd5, 0x28, 0xb4, 0xbd,
	0x72, 0x0b, 0x3c, 0xbd, 0x05, 0xde, 0x91, 0xde, 0x82, 0xa0, 0x59, 0xa1, 0x5f, 0x4b, 0x37, 0x80,
	0x87, 0x9a, 0xa6, 0xc7, 0x39, 0xe3, 0xbd, 0x73, 0x2a, 0xa4, 0xe8, 0xd2, 0xe1, 0x10, 0x39, 0xa6,
	0xf2, 0x50, 0xf2, 0x9c, 0xc8, 0xc2, 0xf8, 0xe5, 0xc7, 0x72, 0x0e, 0x67, 0x09, 0x22, 0x61, 0xfc,
	0x4f, 0x9c, 0x5f, 0x1b, 0xb0, 0x56, 0x6e, 0x8d, 0xa6, 0x7e, 0x13, 0xd2, 0xb8, 0x88, 0x03, 0x43,
	0xc1, 0x52, 0x3b, 0x87, 0x36, 0x2a, 0x99, 0x7e, 0xa4, 0xbd, 0xf7, 0x85, 0x16, 0xaa, 0x24, 0x5e,
	0xce, 0x9b, 0xd1, 0xdf, 0x76, 0xfe, 0xee, 0x4a, 0xe0, 0xe0, 0xbc, 0x54, 0x26, 0xb2, 0x54, 0xb7,
	0x37, 0x25, 0xdb, 0xb8, 0xb4, 0xec, 0xc5, 0x70, 0x26, 0xb2, 0x17, 0x6b, 0x07, 0x4b, 0xb0, 0xc8,
	0x55, 0xdf, 0xee, 0x31, 0x6c, 0xbc, 0x45, 0xd9, 0x1d, 0xa7, 0x61, 0x42, 0xc9, 0x47, 0x16, 0xd5,
	0xf1, 0xe8, 0x27, 0x6d, 0x77, 0x2a, 0x63, 0x73, 0xc2, 0x0a, 0x7c, 0xef, 0x1c, 0x49, 0x5e, 0x8c,
	0xab, 0x11, 0x38, 0x87, 0xb5, 0x5f, 0xb2, 0x96, 0x4f, 0xd6, 0x7f, 0x99, 0xe3, 0x83, 0x57, 0x9f,
	0xf6, 0x47, 0x54, 0x9e, 0xe4, 0x03, 0x8f, 0xb0, 0xc4, 0x57, 0x2c, 0x8c, 0x8f, 0xca, 0x3f, 0xfc,
	0xfa, 0xf5, 0x1f, 0x61, 0xea, 0x67, 0x83, 0x67, 0x23, 0xe6, 0xcf, 0xfe, 0x20, 0x0c, 0x16, 0xd5,
	0xa8, 0xbf, 0xf8, 0x19, 0x00, 0x00, 0xff, 0xff, 0x95, 0x9f, 0x73, 0xd0, 0xb4, 0x06, 0x00, 0x00,
}
