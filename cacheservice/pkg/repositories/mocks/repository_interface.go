// Code generated by mockery v1.0.1. DO NOT EDIT.

package mocks

import (
	interfaces "github.com/flyteorg/flyte/cacheservice/pkg/repositories/interfaces"
	mock "github.com/stretchr/testify/mock"
)

// RepositoryInterface is an autogenerated mock type for the RepositoryInterface type
type RepositoryInterface struct {
	mock.Mock
}

type RepositoryInterface_CachedOutputRepo struct {
	*mock.Call
}

func (_m RepositoryInterface_CachedOutputRepo) Return(_a0 interfaces.CachedOutputRepo) *RepositoryInterface_CachedOutputRepo {
	return &RepositoryInterface_CachedOutputRepo{Call: _m.Call.Return(_a0)}
}

func (_m *RepositoryInterface) OnCachedOutputRepo() *RepositoryInterface_CachedOutputRepo {
	c_call := _m.On("CachedOutputRepo")
	return &RepositoryInterface_CachedOutputRepo{Call: c_call}
}

func (_m *RepositoryInterface) OnCachedOutputRepoMatch(matchers ...interface{}) *RepositoryInterface_CachedOutputRepo {
	c_call := _m.On("CachedOutputRepo", matchers...)
	return &RepositoryInterface_CachedOutputRepo{Call: c_call}
}

// CachedOutputRepo provides a mock function with given fields:
func (_m *RepositoryInterface) CachedOutputRepo() interfaces.CachedOutputRepo {
	ret := _m.Called()

	var r0 interfaces.CachedOutputRepo
	if rf, ok := ret.Get(0).(func() interfaces.CachedOutputRepo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.CachedOutputRepo)
		}
	}

	return r0
}

type RepositoryInterface_ReservationRepo struct {
	*mock.Call
}

func (_m RepositoryInterface_ReservationRepo) Return(_a0 interfaces.ReservationRepo) *RepositoryInterface_ReservationRepo {
	return &RepositoryInterface_ReservationRepo{Call: _m.Call.Return(_a0)}
}

func (_m *RepositoryInterface) OnReservationRepo() *RepositoryInterface_ReservationRepo {
	c_call := _m.On("ReservationRepo")
	return &RepositoryInterface_ReservationRepo{Call: c_call}
}

func (_m *RepositoryInterface) OnReservationRepoMatch(matchers ...interface{}) *RepositoryInterface_ReservationRepo {
	c_call := _m.On("ReservationRepo", matchers...)
	return &RepositoryInterface_ReservationRepo{Call: c_call}
}

// ReservationRepo provides a mock function with given fields:
func (_m *RepositoryInterface) ReservationRepo() interfaces.ReservationRepo {
	ret := _m.Called()

	var r0 interfaces.ReservationRepo
	if rf, ok := ret.Get(0).(func() interfaces.ReservationRepo); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interfaces.ReservationRepo)
		}
	}

	return r0
}
