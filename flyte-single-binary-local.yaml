# This is a sample configuration file for running single-binary Flyte locally against
# a sandbox.
# gatepr: revert the local dir to reflect home.
#   paths were changed to personal to ensure settings didn't get lost.
admin:
  endpoint: localhost:8089
  insecure: true

catalog-cache:
  endpoint: localhost:8081
  insecure: true
  type: datacatalog

cluster_resources:
  standaloneDeployment: false
  templatePath: /Users/ytong/.flyte/sandbox/cluster-resource-templates

logger:
  show-source: true
  level: 3

propeller:
  create-flyteworkflow-crd: true
  kube-config: /Users/ytong/.flyte/sandbox/kubeconfig
  rawoutput-prefix: s3://my-s3-bucket/data

server:
  kube-config: /Users/ytong/.flyte/sandbox/kubeconfig

webhook:
  certDir: /Users/ytong/.flyte/webhook-certs
  localCert: true
  secretName: flyte-sandbox-webhook-secret
  serviceName: flyte-sandbox-local
  servicePort: 9443

tasks:
  task-plugins:
    enabled-plugins:
      - container
      - sidecar
      - K8S-ARRAY
    default-for-task-types:
      - container: container
      - container_array: K8S-ARRAY

plugins:
  logs:
    kubernetes-enabled: true
    kubernetes-template-uri: http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
    cloudwatch-enabled: false
    stackdriver-enabled: false
  k8s:
    default-env-vars:
      - FLYTE_AWS_ENDPOINT: http://flyte-sandbox-minio.flyte:9000
      - FLYTE_AWS_ACCESS_KEY_ID: minio
      - FLYTE_AWS_SECRET_ACCESS_KEY: miniostorage
  k8s-array:
    logs:
      config:
        kubernetes-enabled: true
        kubernetes-template-uri: http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
        cloudwatch-enabled: false
        stackdriver-enabled: false

database:
  postgres:
    username: postgres
    password: postgres
    host: 127.0.0.1
    port: 30001
    dbname: flyte
    options: "sslmode=disable"
  # Point to cloned repo instead.
  #
#  postgres:
#    username: postgres
#    password: xxx
#    host: 127.0.0.1
#    port: 54328
#    dbname: app
#    options: "sslmode=disable"
cloudEvents:
  enable: true
  cloudEventVersion: v2
  type: sandbox
# For admin to find artifacts service
artifacts:
  host: localhost
  port: 30080
  insecure: true
# For artifact service itself
artifactsServer:
  artifactBlobStoreConfig:
    type: stow
    stow:
      kind: s3
      config:
        disable_ssl: true
        v2_signing: true
        endpoint: http://localhost:30002
        auth_type: accesskey
        access_key_id: minio
        secret_key: miniostorage
artifactsProcessor:
  cloudProvider: Sandbox
storage:
  type: stow
  stow:
    kind: s3
    config:
      region: us-east-1
      disable_ssl: true
      v2_signing: true
      endpoint: http://localhost:30002
      auth_type: accesskey
      access_key_id: minio
      secret_key: miniostorage
  container: my-s3-bucket
