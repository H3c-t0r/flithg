name: Build & Push Sandbox Docker Image

on:
  pull_request:
    paths:
      - docker/**
      - charts/**
      - .github/workflows/sandbox.yml
  release:
    types: [published]

jobs:
  sandbox-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Set flyte version to release
        id: set_version
        run: |
          if [ ${{ github.event_name}} = "release" ]; then
            echo ::set-output name=flyte_version::$(echo ${{ github.event.release.tag_name }})
          else
            echo ::set-output name=flyte_version::latest
          fi
      - name: Prepare sandbox Image Names
        id: sandbox-names
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/flyte-sandbox
          tags: |
            latest
            type=sha,format=long
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Login to GitHub Container Registry
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "${{ secrets.FLYTE_BOT_USERNAME }}"
          password: "${{ secrets.FLYTE_BOT_PAT }}"
      - name: Build and push Sandbox image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64, linux/amd64
          push: ${{ github.event_name == 'release' }}
          target: default
          build-args: "FLYTE_VERSION=${{ steps.set_version.outputs.flyte_version }}"
          tags: ${{ steps.sandbox-names.outputs.tags }}
          file: docker/sandbox/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Run Sandbox
        run: |
          flytectl sandbox start --image ${{ steps.sandbox-names.outputs.tags[0] }} --imagePullPolicy Never
          flytectl register example -p flytesnacks -d development
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  sandbox-build-dind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Set flyte version to release
        id: set_version
        run: |
          if [ ${{ github.event_name}} = "release" ]; then
            echo ::set-output name=flyte_version::$(echo ${{ github.event.release.tag_name }})
          else
            echo ::set-output name=flyte_version::latest
          fi
      - name: Prepare DIND Image Names
        id: dind-names
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/flyte-sandbox
          tags: |
            dind
            type=sha,format=long, prefix=dind-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx
      - name: Login to GitHub Container Registry
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "${{ secrets.FLYTE_BOT_USERNAME }}"
          password: "${{ secrets.FLYTE_BOT_PAT }}"
      - name: Build and push DIND Image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64, linux/amd64
          push: ${{ github.event_name == 'release' }}
          target: dind
          tags: ${{ steps.dind-names.outputs.tags }}
          build-args: "FLYTE_VERSION=${{ steps.set_version.outputs.flyte_version }}"
          file: docker/sandbox/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      - name: Run Sandbox
        run: |
          ls -al /tmp/.buildx-cache-new
          docker images
          flytectl sandbox start --image ghcr.io/flyteorg/flyte-sandbox:dind --imagePullPolicy Never
          flytectl register example -p flytesnacks -d development
      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
