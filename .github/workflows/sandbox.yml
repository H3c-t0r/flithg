name: Build & Push Sandbox Docker Image

on:
  workflow_call:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  trigger-sandbox-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Set versions
        run: |
          echo "FLYTECONSOLE_VERSION=$(yq eval '.flyteconsole.image.tag' charts/flyte-core/values.yaml)" >> $GITHUB_ENV
          echo "FLYTE_VERSION=${{ github.sha }}" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::558384610515:role/github-actions-flyte-fork
          aws-region: us-east-1 # public ECR is only available in us-east-1
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Prepare DIND Image Names
        id: dind-names
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ steps.ecr-login.outputs.registry }}/p6w6o0n4/flyte-sandbox
          tags: |
            type=sha,format=long,prefix=
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push DIND Image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64, linux/amd64
          push: true
          target: dind
          tags: ${{ steps.dind-names.outputs.tags }}
          build-args: |
            FLYTECONSOLE_VERSION=${{ env.FLYTECONSOLE_VERSION }}
            FLYTE_VERSION=${{ env.FLYTE_VERSION }}
          file: docker/sandbox/Dockerfile

  trigger-sandbox-lite-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Setup Golang caches
        uses: actions/cache@v3
        with:
          path: |
            /root/.cache/go-build
            /root/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-
      - name: Set versions
        run: |
          echo "FLYTECONSOLE_VERSION=$(yq eval '.flyteconsole.image.tag' charts/flyte-core/values.yaml)" >> $GITHUB_ENV
          echo "FLYTE_VERSION=${{ github.sha }}" >> $GITHUB_ENV
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::558384610515:role/github-actions-flyte-fork
          aws-region: us-east-1 # public ECR is only available in us-east-1
      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      - name: Prepare DIND Image Names
        id: dind-names
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ steps.ecr-login.outputs.registry }}/p6w6o0n4/flyte-sandbox-lite
          tags: |
            type=sha,format=long,prefix=
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push DIND Image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64, linux/amd64
          push: true
          target: dind
          tags: ${{ steps.dind-names.outputs.tags }}
          build-args: |
            FLYTECONSOLE_VERSION=${{ env.FLYTECONSOLE_VERSION }}
            FLYTE_VERSION=${{ env.FLYTE_VERSION }}
          file: Dockerfile.sandbox-lite
