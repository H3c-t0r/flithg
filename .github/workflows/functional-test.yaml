name: Functional test

on:
  pull_request:
    paths:
      - docker/**
      - charts/**
      - .github/workflows/sandbox.yml

jobs:
  run-tests:
    name: Functional test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: whoan/docker-build-with-cache-action@v5
        with:
          image_name: flyteorg/flyte-sandbox
          image_tag: dind
          registry: ghcr.io
          build_extra_args: --target=dind --compress=true
          context: ./
          dockerfile: docker/sandbox/Dockerfile
          push_image_and_stages: false
      - uses: unionai/flytectl-setup-action@v0.0.1
      - name: Setup sandbox
        run: |
          flytectl sandbox start --image ghcr.io/flyteorg/flyte-sandbox:dind --imagePullPolicy Never
          flytectl config init
      - name: Register examples
        uses: unionai/flyte-register-action@v0.0.2
        with:
          flytesnacks: true
          project: flytesnacks
          version: "latest"
          domain: development
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flytekit
          pip freeze
      # TODO: add a badge for when test is running
      - name: Run tests
        id: run-tests
        env:
          PRIORITIES: "P0"
        run: |
          latest_version=$(curl --silent "https://api.github.com/repos/flyteorg/flytesnacks/releases/latest" | jq -r .tag_name)
          run_tests_output=$(./script/run-tests.py $latest_version $PRIORITIES)
          echo "$run_tests_output"