name: FUNCTIONAL TESTING OF AWS

on:
  push:
    branches:
      - opta-aws
  # TODO:  ADD SCHEDULE
  workflow_dispatch:
    inputs:
      mode:
        description: "Mode of operation (either nightly or release)"
        required: true
        default: "nightly"
        type: choice
        options:
          - nightly
          - release
      components_version:
        description: "Version used by all components. Leave as latest for the nightly runs and pick a flyte release version in case of a release test (e.g. the full string \"v0.18.2\")"
        required: true
        default: "latest"
        type: string

permissions:
  id-token: write
  contents: read

env:
  ENV_NAME: development
  YOUR_COMPANY: flyteorg
  AWS_REGION: us-east-1
  FLYTE_STORAGE_BUCKET: flyteorg-testing-unique-bucket-123456
  # TODO -- USE A NEW BUCKET, WITH NAME FROM SECRET?
jobs:
  set-env-vars:
    runs-on: ubuntu-latest
    steps:
     - name: set env variables
       id: set-env-vars
       shell: bash
       run: |
         echo "::set-output name=aws_region::$AWS_REGION"
         echo "::set-output name=your_company::$YOUR_COMPANY"
         echo "::set-output name=env_name::$ENV_NAME"
         echo "::set-output name=flyte_storage_bucket::$FLYTE_STORAGE_BUCKET"
    outputs:
      aws-region: ${{ steps.set-env-vars.outputs.aws_region }}
      your-company: ${{ steps.set-env-vars.outputs.your_company }}
      env-name: ${{ steps.set-env-vars.outputs.env_name }}
      flyte-bucket: ${{ steps.set-env-vars.outputs.flyte_storage_bucket }}
  calculate-pre-reqs:
    # TODO: UPDATE THIS TO @main
    uses: flyteorg/flyte/.github/workflows/calculate_pre_reqs.yml@opta-aws
    with:
      mode: ${{ github.event.inputs.mode }}
      components_version: ${{ github.event.inputs.components_version }}
  create-opta-aws:
    needs:
      - set-env-vars
      - calculate-pre-reqs
    # TODO: UPDATE THIS TO @main
    uses: flyteorg/flyte/.github/workflows/create_opta_aws.yml@opta-aws
    with:
      aws-region: ${{ needs.set-env-vars.outputs.aws-region }}
      your-company: ${{ needs.set-env-vars.outputs.your-company }}
      env-name: ${{ needs.set-env-vars.outputs.env-name }}
      mode: ${{ needs.calculate-pre-reqs.outputs.mode }}
      components_version: ${{ needs.calculate-pre-reqs.outputs.components_version }}
      flyte-storage-bucket: ${{ needs.set-env-vars.outputs.flyte-bucket }}
    secrets: inherit
  run-flytekit-tests:
    needs:
      - create-opta-aws
      - calculate-pre-reqs
    # TODO: UPDATE TO @main
    uses: flyteorg/flyte/.github/workflows/run_flytekit_tests.yml@opta-aws
    with:
      dns: ${{ needs.create-opta-aws.outputs.dns }}
      components_version: ${{ needs.calculate-pre-reqs.outputs.components_version }}
#  destroy-cluster:
#    # TODO: UPDATE THIS TO @main
#    uses: flyteorg/flyte/.github/workflows/destroy_cluster.yml@opta-aws
#    with:
#      aws-region: ${{ needs.set-env-vars.outputs.aws-region }}
#    secrets: inherit
#    needs:
#      - set-env-vars
#      - calculate-pre-reqs
#      - create-opta-aws
#      #- run-flytekit-tests