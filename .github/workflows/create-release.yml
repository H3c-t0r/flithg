name: Create a flyte release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "version name. example v0.1.1"
        required: true

jobs:
  bump-version:
    name: bump-version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Bump version and push tag
        id: bump-version
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}
          WITH_V: true
          CUSTOM_TAG: ${{ github.event.inputs.version }}
          RELEASE_BRANCHES: master

  publish-flyte-component-image:
    name: Publish flyte component image for the release version
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    strategy:
      matrix:
        component: [flyteconsole, flytepropeller, flyteadmin, datacatalog, flytescheduler]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Get Latest Version of component
        run: |
          VERSION=$(curl --silent "https://api.github.com/repos/flyteorg/flyteidl/releases/latest" | jq -r .tag_name)
          echo ::set-output name=version::$(echo $VERSION)
        shell: bash

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: "${{ secrets.FLYTE_BOT_USERNAME }}"
          password: "${{ secrets.FLYTE_BOT_PAT }}"

      - name: Tag Image to release version
        run: |
          docker tag ghcr.io/flyteorg/${{ matrix.component }}:${{ steps.set_version.outputs.flyte_version }} ghcr.io/flyteorg/${{ matrix.component }}:${{ needs.bump-version.outputs.version }}
          docker push ghcr.io/flyteorg/${{ matrix.component }}:${{ needs.bump-version.outputs.version }}

  helm-release:
    name: Flyte helm release
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Install Helm
        uses: azure/setup-helm@v1

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>"
      - name: Preprare Flyte Helm Release
        env:
          VERSION: ${{ needs.bump-version.outputs.version }}
          REPOSITORY: "https://flyteorg.github.io/flyte"
        run: |
          make prepare_artifacts
      - name: Run chart-releaser
        uses: stefanprodan/helm-gh-pages@v1.4.1
        with:
          token: "${{ secrets.FLYTE_BOT_PAT }}"
          linting: off

  manifest-release:
    name: Flyte manifest release
    runs-on: ubuntu-latest
    needs: [ bump-version ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Preprare Flyte Release
        env:
          VERSION: ${{ needs.bump-version.outputs.version }}
        run: |
          make prepare_artifacts
          git stash
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --release-notes=CHANGELOG/CHANGELOG-${{ github.event.inputs.version }}.md
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}
