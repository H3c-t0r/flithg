nameOverride: ""
fullnameOverride: ""
commonLabels: {}
commonAnnotations: {}

configuration:
  database:
    username: postgres
    password: ""
    passwordPath: ""
    host: 127.0.0.1
    port: 5432
    dbname: flyte
    options: sslmode=disable
  storage:
    metadataContainer: "my-organization-flyte-container"
    userDataContainer: "my-organization-flyte-container"
    provider: s3
    providerConfig:
      s3:
        region: "us-east-1"
        disableSSL: false
        endpoint: ""
        authType: "iam"
        accessKey: ""
        secretKey: ""
      gcs:
        project: "my-organization-gcp-project"
  logging:
    level: 1
    plugins:
      kubernetes:
        enabled: false
        templateUri: ""
      cloudwatch:
        enabled: false
        templateUri: ""
      stackdriver:
        enabled: false
        templateUri: ""
      custom: []
  externalConfigMap: ""
  inline: {}
  labels: {}
  annotations: {}
  sourcePath: ""

clusterResourceTemplates:
  externalConfigMap: ""
  inline: {}
  labels: {}
  annotations: {}
  sourcePath: ""

deployment:
  image:
    repository: ghcr.io/flyteorg/flyte-sandbox
    tag: flytebinary_1007
    pullPolicy: IfNotPresent
  extraEnvVars: []
  extraEnvVarsConfigMap: ""
  extraEnvVarsSecret: ""
  command: []
  args: []
  livenessProbe: {}
  readinessProbe: {}
  startupProbe: {}
  lifecycleHooks: {}
  resources:
    limits:
      memory: 1Gi
    requests:
      cpu: 1
  podSecurityContext:
    enabled: false
    runAsUser: 65534
    runAsGroup: 65534
    fsGroup: 65534
  waitForDB:
    image:
      repository: postgres
      tag: 15-alpine
      pullPolicy: IfNotPresent
    command: []
    args: []
  labels: {}
  annotations: {}
  podLabels: {}
  podAnnotations: {}
  extraVolumeMounts: []
  extraVolumes: []
  sidecars: []
  initContainers: []
  imagePullSecrets: []
  extraPodSpec: {}

service:
  type: ClusterIP
  ports:
    http: ""
    grpc: ""
  nodePorts:
    http: ""
    grpc: ""
  clusterIP: ""
  labels: {}
  annotations: {}
  loadBalancerIP: ""
  externalTrafficPolicy: Cluster
  loadBalancerSourceRanges: []
  extraPorts: []
  sessionAffinity: None
  sessionAffinityConfig: {}

ingress:
  create: false
  name: ""
  labels: {}
  annotations: {}
  host: ""

rbac:
  create: true
  name: ""
  labels: {}
  annotations: {}

serviceAccount:
  create: true
  name: ""
  labels: {}
  annotations: {}
