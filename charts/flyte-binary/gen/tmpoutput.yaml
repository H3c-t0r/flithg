apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: flytedemo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flyte-binary
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: flyte-binary-0.1.0
  name: flyte
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flyte
  namespace: flyte
---
apiVersion: v1
data:
  namespace.yaml: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: {{ namespace }}
    spec:
      finalizers:
      - kubernetes
  project_resource_quota.yaml: |
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      name: project-quota
      namespace: {{ namespace }}
    spec:
      hard:
        limits.cpu: {{ projectQuotaCpu }}
        limits.memory: {{ projectQuotaMemory }}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: flytedemo
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: flyte-binary
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: flyte-binary-0.1.0
  name: cluster-resource-templates
  namespace: flyte
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flyte-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - resourcequotas
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - delete
  - patch
  - update
- apiGroups:
  - flyte.lyft.com
  resources:
  - flyteworkflows
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - post
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - get
  - list
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flyte-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flyte-role
subjects:
- kind: ServiceAccount
  name: flyte
  namespace: flyte
---
apiVersion: v1
kind: Service
metadata:
  name: flyte
  namespace: flyte
spec:
  ports:
  - name: http
    port: 8088
  - name: grpc
    port: 8089
  selector:
    app: flyte
---
apiVersion: v1
kind: Service
metadata:
  name: flyte-pod-webhook
  namespace: flyte
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 9443
  selector:
    app: flyte
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flyte
  name: flytebinary
  namespace: flyte
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flyte
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flyte
    spec:
      containers:
      - args:
        - start
        - --config
        - /etc/flyte/flyte.yaml
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: flyte
        imagePullPolicy: IfNotPresent
        name: flyte
        ports:
        - containerPort: 8088
          name: http
        - containerPort: 8089
          name: grpc
        - containerPort: 9443
          name: webhook
        resources:
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - mountPath: /etc/flyte/cluster-resource-templates
          name: cluster-resource-templates
        - mountPath: /etc/flyte/flyte.yaml
          name: config
        - mountPath: /var/run/flyte
          name: state
      hostNetwork: true
      serviceAccountName: flyte
      volumes:
      - configMap:
          name: cluster-resource-templates
        name: cluster-resource-templates
      - hostPath:
          path: /srv/flyte/flyte.yaml
          type: File
        name: config
      - emptyDir: {}
        name: state
