---
# Source: flyte-binary/templates/namespace.yaml
kind: Namespace
apiVersion: v1
metadata:
  name: flyte
  labels: 
    helm.sh/chart: flyte-binary-0.1.0
    app.kubernetes.io/name: flyte-binary
    app.kubernetes.io/instance: flytedemo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: flyte-binary/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flyte
---
# Source: flyte-binary/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster-resource-templates
  labels: 
    helm.sh/chart: flyte-binary-0.1.0
    app.kubernetes.io/name: flyte-binary
    app.kubernetes.io/instance: flytedemo
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  namespace.yaml: |
    apiVersion: v1
    kind: Namespace
    metadata:
      name: {{ namespace }}
    spec:
      finalizers:
      - kubernetes
  project_resource_quota.yaml: |
    apiVersion: v1
    kind: ResourceQuota
    metadata:
      name: project-quota
      namespace: {{ namespace }}
    spec:
      hard:
        limits.cpu: {{ projectQuotaCpu }}
        limits.memory: {{ projectQuotaMemory }}
---
# Source: flyte-binary/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flyte-role
rules:
- apiGroups:
      - ""
  resources:
      - namespaces
      - resourcequotas
      - secrets
  verbs:
      - create
      - get
      - list
      - patch
      - update
- apiGroups:
      - ""
  resources:
      - pods
  verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
- apiGroups:
      - ""
  resources:
      - events
  verbs:
      - create
      - delete
      - patch
      - update
- apiGroups:
      - flyte.lyft.com
  resources:
      - flyteworkflows
  verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - post
      - update
      - watch
- apiGroups:
      - apiextensions.k8s.io
  resources:
      - customresourcedefinitions
  verbs:
      - create
      - get
      - list
- apiGroups:
      - admissionregistration.k8s.io
  resources:
      - mutatingwebhookconfigurations
  verbs:
      - create
      - get
      - list
      - patch
      - update
---
# Source: flyte-binary/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flyte-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flyte-role
subjects:
  - kind: ServiceAccount
    name: flyte
    # Have to add a namespace explicitly here so that the generated manifest has it
    # since kubectl apply --namespace won't update it.
    namespace: flyte
---
# Source: flyte-binary/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: flyte
spec:
  ports:
    - name: http
      port: 8088
    - name: grpc
      port: 8089
  selector:
    app: flyte
---
# Source: flyte-binary/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: flyte-pod-webhook
spec:
  ports:
    - name: webhook
      port: 443
      targetPort: 9443
  selector:
    app: flyte
---
# Source: flyte-binary/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: flyte
  name: flytebinary
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: flyte
  template:
    metadata:
      labels:
        app: flyte
    spec:
      hostNetwork: true
      containers:
      - name: flyte
        image: "flyte"
        imagePullPolicy: IfNotPresent
        args:
        - start
        - --config
        - /etc/flyte/flyte.yaml
        resources:
          limits:
            cpu: 1
            memory: 1Gi
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8088
          name: http
        - containerPort: 8089
          name: grpc
        - containerPort: 9443
          name: webhook
        volumeMounts:
        - mountPath: /etc/flyte/cluster-resource-templates
          name: cluster-resource-templates
        - mountPath: /etc/flyte/flyte.yaml
          name: config
        - mountPath: /var/run/flyte
          name: state
      serviceAccountName: flyte
      volumes:
      - name: cluster-resource-templates
        configMap:
          name: cluster-resource-templates
      - hostPath:
          path: /srv/flyte/flyte.yaml
          type: File
        name: config
      - name: state
        emptyDir: {}
