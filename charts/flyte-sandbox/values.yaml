docker-registry:
  enabled: true
  image:
    repository: registry
    tag: sandbox
    pullPolicy: Never
  persistence:
    enabled: false
  service:
    type: NodePort
    nodePort: 30000

flyte-binary:
  enabled: true
  configuration:
    database:
      password: postgres
      port: 30001
    storage:
      metadataContainer: my-s3-bucket
      userDataContainer: my-s3-bucket
      provider: s3
      providerConfig:
        s3:
          disableSSL: true
          endpoint: http://localhost:30002
          authType: accesskey
          accessKey: minio
          secretKey: miniostorage
    logging:
      level: 6
      plugins:
        kubernetes:
          enabled: true
          templateUri: |-
            http://localhost:30080/kubernetes-dashboard/#/log/{{.namespace }}/{{ .podName }}/pod?namespace={{ .namespace }}
    inline:
      plugins:
        k8s:
          default-env-vars:
            - FLYTE_AWS_ENDPOINT: http://{{ .Release.Name }}-minio.{{ .Release.Namespace }}:9000
            - FLYTE_AWS_ACCESS_KEY_ID: minio
            - FLYTE_AWS_SECRET_ACCESS_KEY: miniostorage
  deployment:
    image:
      repository: flyte-binary
      tag: sandbox
      pullPolicy: Never
    waitForDB:
      image:
        repository: bitnami/postgresql
        tag: sandbox
        pullPolicy: Never
    extraPodSpec:
      hostNetwork: true

kubernetes-dashboard:
  enabled: true
  image:
    repository: kubernetesui/dashboard
    tag: sandbox
    pullPolicy: Never
  extraArgs:
    - --enable-insecure-login
    - --enable-skip-login
  protocolHttp: true
  service:
    externalPort: 80
  rbac:
    create: true
    clusterRoleMetrics: false
    clusterReadOnlyRole: true

minio:
  enabled: true
  image:
    repository: bitnami/minio
    tag: sandbox
    pullPolicy: Never
  auth:
    rootUser: minio
    rootPassword: miniostorage
  defaultBuckets: my-s3-bucket
  extraEnvVars:
    - name: MINIO_BROWSER_REDIRECT_URL
      value: http://localhost:30080/minio
  service:
    type: NodePort
    nodePorts:
      api: 30002
  persistence:
    enabled: true
    storageClass: local-path

postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    tag: sandbox
    pullPolicy: Never
  auth:
    postgresPassword: postgres
  shmVolume:
    enabled: false
  primary:
    service:
      type: NodePort
      nodePorts:
        postgresql: 30001
    persistence:
      enabled: true
      storageClass: local-path

proxy:
  enabled: true
  image:
    repository: envoyproxy/envoy
    tag: sandbox
    pullPolicy: Never
