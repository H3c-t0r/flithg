environments:
  - name: default
    path: "./env.yaml" # NOTE: relative path to environment
    variables:
      google_project_id: <project_id>
name: service-flyte
modules:
  - name: postgres
    type: gcp-postgres
  - name: gcs
    type: gcp-gcs
    bucket_name: "{parent_name}-{layer_name}"
  - name: adminflyteaccount
    type: gcp-service-account
    explicit_name: gsa-flyteadmin
    allowed_k8s_services:
      - namespace: flyte
        service_account_name: flyteadmin
    links:
      - gcs: [ "write" ]
  - name: datacatalogaccount
    type: gcp-service-account
    explicit_name: gsa-datacatalog
    allowed_k8s_services:
      - namespace: flyte
        service_account_name: datacatalog
    links:
      - gcs: [ "write" ]
  - name: flytescheduleraccount
    type: gcp-service-account
    explicit_name: gsa-flytescheduler
    allowed_k8s_services:
      - namespace: flyte
        service_account_name: flytescheduler
    links:
      - gcs: [ "write" ]
  - name: flytepropelleraccount
    type: gcp-service-account
    explicit_name: gsa-flytepropeller
    allowed_k8s_services:
      - namespace: flyte
        service_account_name: flytepropeller
    links:
      - gcs: [ "write" ]
  - name: flyteproductionaccount
    type: gcp-service-account
    explicit_name: gsa-production
    allowed_k8s_services:
      - namespace: production
        service_account_name: default
    links:
      - gcs: [ "write" ]
  - name: flytestagingaccount
    type: gcp-service-account
    explicit_name: gsa-staging
    allowed_k8s_services:
      - namespace: staging
        service_account_name: default
    links:
      - gcs: [ "write" ]
  - name: flytedevelopmentaccount
    type: gcp-service-account
    explicit_name: gsa-development
    allowed_k8s_services:
      - namespace: development
        service_account_name: default
    links:
      - gcs: [ "write" ]
  - type: helm-chart
    chart: "../../charts/flyte-core" # NOTE: relative path to chart
    namespace: flyte
    timeout: 600
    create_namespace: true
    values_file: "../../charts/flyte-core/values-gcp.yaml" # NOTE: relative path to values yaml
    # Additional overrides to the values provided by the chart. Opta enables piping through produced outputs from prior modules/steps.
    values:
      postgres:
        enabled: false
      db:
        datacatalog:
          database:
            port: 5432
            username: "${{module.postgres.db_user}}"
            host: "${{module.postgres.db_host}}"
            dbname: "${{module.postgres.db_name}}"
        admin:
          database:
            port: 5432
            username: "${{module.postgres.db_user}}"
            host: "${{module.postgres.db_host}}"
            dbname: "${{module.postgres.db_name}}"
      common:
        ingress:
          albSSLRedirect: false
          host: "{parent.domain}"
          annotations:
            kubernetes.io/ingress.class: "nginx"
            nginx.ingress.kubernetes.io/app-root: /console
        databaseSecret:
          secretManifest:
            stringData:
              pass.txt: "${{module.postgres.db_password}}"
      storage:
        bucketName: "${{module.gcs.bucket_name}}"
        gcs:
          projectId: "{vars.google_project_id}"
      flyteadmin:
        serviceAccount:
          create: true
          annotations:
            "iam.gke.io/gcp-service-account": "${{module.adminflyteaccount.service_account_email}}"
      datacatalog:
        serviceAccount:
          create: true
          annotations:
            "iam.gke.io/gcp-service-account": "${{module.datacatalogaccount.service_account_email}}"
      flytepropeller:
        serviceAccount:
          create: true
          annotations:
            "iam.gke.io/gcp-service-account": "${{module.flytepropelleraccount.service_account_email}}"
      flytescheduler:
        serviceAccount:
          create: true
          annotations:
            "iam.gke.io/gcp-service-account": "${{module.flytescheduleraccount.service_account_email}}"
      configmap:
        core:
          propeller:
            rawoutput-prefix: "gs://${{module.gcs.bucket_name}}/"
      cluster_resource_manager:
        enabled: true
        config:
          cluster_resources:
            customData:
              - production:
                  - gsa:
                      value: "${{module.flyteproductionaccount.service_account_email}}"
                  - projectQuotaCpu:
                      value: "5"
                  - projectQuotaMemory:
                      value: "4000Mi"
              - staging:
                  - gsa:
                      value: "${{module.flytestagingaccount.service_account_email}}"
                  - projectQuotaCpu:
                      value: "2"
                  - projectQuotaMemory:
                      value: "3000Mi"
              - development:
                  - gsa:
                      value: "${{module.flytedevelopmentaccount.service_account_email}}"
                  - projectQuotaCpu:
                      value: "2"
                  - projectQuotaMemory:
                      value: "3000Mi"